<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Linq"#>
<#@ assembly name="EnvDTE"#>
<#@ assembly name="System.Xml"#>
<#@ assembly name="System.Xml.Linq"#>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.IO"#>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating"#>
<#@ include file="MultipleOutputHelper.tt" #>
<#@ include file="ReadA5ErIni.tt" #>

<# 
	var EntityNamespace = "Common.Entity";
　　// Find a path within the same project as the text template:
　　string iniFilePath = this.Host.ResolvePath("ShoppingSite.a5er");
    var list = ReadA5ErIni.Read(iniFilePath);
	var manager = Manager.Create(Host, GenerationEnvironment);
	foreach(var tbl in list)
	{
	var fileName = @"Entity\" + tbl.EntityName + ".cs";
	manager.StartNewFile(fileName);
	manager.StartHeader();
#>
// Code generated by a T4 template
using System;
using Seasar.Dao.Attrs;

namespace <#= EntityNamespace #>
{
    /// <summary>
    /// <#= tbl.LName #>
    /// </summary>
    [Table("<#= tbl.PName #>")]
    public class <#= tbl.EntityName #>
    { 
<#
	foreach(var fields in tbl.listFields)
	{
#>
        /// <summary>
        /// <#= fields.LName #>
        /// </summary>
        private string _<#= fields.FieldName #>;
        [Column("<#= fields.PName #>")]
        public string <#= fields.FieldName #>
        { 
            set { _<#= fields.FieldName #> = value; } 
            get { return _<#= fields.FieldName #>; } 
        } 
<#
	}
#>

        /// <summary>
        /// 指定した System.Object が、現在の System.Object と等しいかどうかを判断します。
        /// </summary>
        /// <param name="obj">System.Object</param>
        /// <returns>指定したオブジェクトが現在のオブジェクトと等しい場合は true。それ以外の場合は false。</returns>
        public override bool Equals(object obj)
        {
            return base.Equals(obj);
        }
        /// <summary>
        /// 特定の型のハッシュ関数として機能します。
        /// </summary>
        /// <returns>現在の System.Object のハッシュ コード</returns>
        public override int GetHashCode()
        {
            return base.GetHashCode();
        }
    }
}

<#
}
manager.EndBlock();
manager.Process(true); 
#>
